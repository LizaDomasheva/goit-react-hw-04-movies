{"version":3,"sources":["components/addInfo/addInfo.module.css","components/movie/movie.module.css","pages/Cast.js","pages/Reviews.js","components/addInfo/AddInfo.js","components/movie/Movie.js"],"names":["module","exports","getIdFromProps","props","match","params","movieId","Cast","state","casts","message","getCast","a","id","fetchCast","setState","data","cast","this","map","key","style","width","height","src","profile_path","alt","name","character","Component","Reviews","reviews","getReviews","fetchReviews","results","length","review","author","content","AddInfo","className","styles","list","exact","activeStyle","fontWeight","color","to","pathname","from","withRouter","title","vote_average","overview","genres","poster_path","onGoBack","container","type","onClick","movieBox","image","movieDiv","wordSpacing","join","infoBlock","path","render"],"mappings":"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","file":"static/js/movie.0e5388c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"addInfo_list__11UDH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"movie_container__eCPBL\",\"movieBox\":\"movie_movieBox__3OOi4\",\"movieDiv\":\"movie_movieDiv__1_bcv\",\"infoBlock\":\"movie_infoBlock__owVbP\",\"title\":\"movie_title__3NYiS\",\"image\":\"movie_image__2b6ZT\"};","import React, { Component } from 'react';\r\nimport { fetchCast } from '../services/fetcher';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst getIdFromProps = props => props.match.params.movieId;\r\nconst imageUrl = 'https://image.tmdb.org/t/p/w500';\r\n\r\nexport default class Cast extends Component {\r\n  state = {\r\n    casts: [],\r\n    message: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCast();\r\n  }\r\n\r\n  getCast = async () => {\r\n    try {\r\n      const id = getIdFromProps(this.props);\r\n      const casts = await fetchCast(id);\r\n      this.setState({ casts: casts.data.cast });\r\n    } catch (message) {\r\n      this.setState({ message });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { casts } = this.state;\r\n    return (\r\n      <ul>\r\n        {casts.map(cast => (\r\n          <li key={cast.id}>\r\n            <img\r\n              style={{ width: 80, height: 'auto' }}\r\n              src={imageUrl + `${cast.profile_path}`}\r\n              alt=\"cast\"\r\n            />\r\n            <p>{cast.name}</p>\r\n            <p>Character: {cast.character}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nCast.propTypes = {\r\n  id: PropTypes.number,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { fetchReviews } from '../services/fetcher';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst getIdFromProps = props => props.match.params.movieId;\r\n\r\nexport default class Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n    message: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getReviews();\r\n  }\r\n\r\n  getReviews = async () => {\r\n    try {\r\n      const id = getIdFromProps(this.props);\r\n      const reviews = await fetchReviews(id);\r\n      this.setState({ reviews: reviews.data.results });\r\n    } catch (message) {\r\n      this.setState({ message });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n    return (\r\n      <ul>\r\n        {reviews.length > 0 ? (\r\n          reviews.map(review => (\r\n            <li key={review.id}>\r\n              <p>Author: {review.author}</p>\r\n              <p>{review.content}</p>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>We don't have any reviews for this movie.</p>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nReviews.propTypes = {\r\n  id: PropTypes.number,\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './addInfo.module.css';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddInfo = ({ id }) => (\r\n  <ul className={styles.list}>\r\n    <li>\r\n      <NavLink\r\n        exact\r\n        activeStyle={{\r\n          fontWeight: 'bold',\r\n          color: 'red',\r\n        }}\r\n        to={{\r\n          pathname: `/movies/${id}/cast`,\r\n          state: { from: '/'},\r\n        }}\r\n      >\r\n        Cast\r\n      </NavLink>\r\n    </li>\r\n    <li>\r\n      <NavLink\r\n        exact\r\n        activeStyle={{\r\n          fontWeight: 'bold',\r\n          color: 'red',\r\n        }}\r\n        to={{\r\n          pathname: `/movies/${id}/reviews`,\r\n          state: { from: '/'},\r\n        }}\r\n      >\r\n        Reviews\r\n      </NavLink>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nAddInfo.propTypes = {\r\nid: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default AddInfo;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport Cast from '../../pages/Cast';\r\nimport Reviews from '../../pages/Reviews';\r\nimport AddInfo from '../addInfo/AddInfo';\r\nimport styles from './movie.module.css';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst imageUrl = 'https://image.tmdb.org/t/p/w500'\r\n\r\nconst Movie = ({ title, vote_average, overview, genres, poster_path, onGoBack, id, match}) => (\r\n  <>\r\n  <div className={styles.container}>\r\n    <button type=\"button\" onClick={onGoBack}>&#129044; Go back</button>\t\r\n    <div className={styles.movieBox}>\r\n  <div>\r\n    <img className={styles.image} alt=\"movie\" src={imageUrl + `${poster_path}`}></img>\r\n    </div>\r\n  <div className={styles.movieDiv}>\r\n    <h2>{title}</h2>\r\n    <p>User score: {vote_average*10}%</p>\r\n    <h3>Overview</h3>\r\n    <p>{overview}</p>\r\n    <h3>Genres</h3>\r\n    <p style={{wordSpacing: 15}}>{genres.join(' ')}</p>\r\n  </div>\r\n    </div>\r\n    </div>\r\n  <div className={styles.infoBlock}>\r\n    <p className={styles.title}>Additional information</p>\r\n    <AddInfo id={id}/>\r\n    <Switch>\r\n    <Route path={`${match.path}/cast`} exact render={props=><Cast {...props} id={id} />}/>\r\n    <Route path={`${match.path}/reviews`} exact render={props=><Reviews {...props} id={id} />}/>\r\n    </Switch>\r\n    </div>\r\n    </>\r\n);\r\n\r\nMovie.propTypes = {\r\n  title: PropTypes.string,\r\n  vote_average: PropTypes.number,\r\n  overview: PropTypes.string,\r\n  genres: PropTypes.array,\r\n  poster_path: PropTypes.string,\r\n  onGoBack: PropTypes.func,\r\n  id: PropTypes.number,\r\n}\r\n\r\nexport default withRouter(Movie);\r\n\r\n\r\n"],"sourceRoot":""}